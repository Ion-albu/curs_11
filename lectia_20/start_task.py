"""
### ğŸ§ª **ExerciÈ›iu de evaluare: RelaÈ›ia dintre MaÈ™inÄƒ, Motor È™i È˜ofer**

#### CerinÈ›Äƒ:

CreeazÄƒ urmÄƒtoarele clase:

1. **Clasa `Motor`**

   * Atribut **privat**: `putere` (Ã®n cai putere)
   * MetodÄƒ **publicÄƒ**: `descrie_motor()` â†’ returneazÄƒ un string cu puterea motorului
   """
class Motor:
   def __init__(self, putere):
      self.__putere = putere

   def descrie_motor(self):
      return f"puterea motorului este: {self.__putere}"
"""
2. **Clasa `Sofer`**

   * Atribut **public**: `nume`
   * MetodÄƒ **privatÄƒ**: `__verifica_permis()` â†’ returneazÄƒ `True`
   * MetodÄƒ **publicÄƒ**: `poate_conduce()` â†’ foloseÈ™te metoda `__verifica_permis()`
"""
class Sofer:
   def __init__(self, nume):
      self.nume = nume

   def __verifica_permis(self):
      return True
   def poate_conduce(self):
      return self.__verifica_permis()

"""
3. **Clasa `Masina`**

   * **Agregare**: primeÈ™te un obiect de tip `Sofer` ca parametru Ã®n constructor
   * **CompoziÈ›ie**: creeazÄƒ Ã®n constructor un obiect de tip `Motor`
   * Atribut **privat**: `__marca`
   * MetodÄƒ **publicÄƒ**: `porneste()` â†’ verificÄƒ dacÄƒ È™oferul poate conduce È™i afiÈ™eazÄƒ un mesaj cu marca È™i puterea motorului

   """
class Masina:
   def __init__(self,marca,putere_motor,sofer):
      self.__marca = marca
      self.motor = Motor(putere_motor)
      self.sofer = sofer

   def porneste(self):
      if self.sofer.poate_conduce():
            print(f"MaÈ™ina {self.__marca} a pornit cu {self.motor.descrie_motor()}.")
      else:
            print(f"{self.sofer.nume} nu poate conduce maÈ™ina {self.__marca}.")


#### Exemplu de utilizare:


sofer = Sofer("Maria")
masina = Masina("Dacia", sofer)
masina.porneste()

### âœ… Ce trebuie sÄƒ conÈ›inÄƒ testul:
"""
* Folosirea **atributelor private** (`__marca`, `__verifica_permis`)
* Utilizarea **metodelor publice/private**
* Demonstrarea **compoziÈ›iei** (`Masina` creeazÄƒ `Motor`)
* Demonstrarea **agregÄƒrii** (`Masina` primeÈ™te un `Sofer`)
* Verificare logicÄƒ simplÄƒ Ã®n metoda `porneste()`
"""
